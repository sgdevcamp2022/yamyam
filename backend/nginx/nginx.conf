upstream auth_server {
  server auth:8000;
}

upstream lobby_server {
  server lobby:8001;
}

map $http_access_token $token_type {
  default "access_token";
  "" "";
}

map $http_refresh_token $token_type {
  default "refresh_token";
  "" "";
}

server {

  listen 80;
  
  location /ws/lobby/ {
    if ($token_type = "") {
      return 400;
    }
    set $subqry $uri;
    set $clientip $remote_addr;
    proxy_pass_request_headers on;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    auth_request /check_token;
    proxy_intercept_errors on;
    error_page 401 = @error_401;
    proxy_pass http://lobby_server;
  }
  location /static/ {
    alias /home/backend/auth/staticfiles/;
  }
  location /admin {
    proxy_set_header Host $host;
    proxy_pass http://auth_server;
  }
  location = /accounts {
    #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    # proxy_redirect off;
    proxy_pass http://auth_server/accounts/;
  }
  location = /accounts/find_username {
    proxy_set_header Host $host;
    proxy_pass http://auth_server/accounts/find_username/;
  }
  location = /accounts/login {
    proxy_set_header Host $host;
    proxy_pass http://auth_server/accounts/login/;
  }
  location = /accounts/password_reset {
    proxy_set_header Host $host;
    proxy_pass http://auth_server/accounts/password_reset/;
  }
  location = /accounts/list {
    proxy_set_header Host $host;
    proxy_pass http://auth_server/accounts/list/;
  }
  location /accounts/activate {
    proxy_set_header Host $host;
    proxy_pass http://auth_server;
  }
  location /accounts/reset {
    proxy_set_header Host $host;
    proxy_pass http://auth_server;
  }
  location /accounts/withdraw {
    proxy_set_header Host $host;
    proxy_pass http://auth_server;
  }
  location @error_401 {
    return 401;
  }
  location /check_token {
    proxy_pass_request_body off;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Original_URI $request_uri;
    proxy_set_header X-Api-Subqry $subqry;
    proxy_set_header X-Client-IP $clientip;
    proxy_pass http://auth_server/accounts/check_$token_type;
  }
  location /accounts {
    if ($token_type = "") {
      return 400;
    }
    set $subqry $uri;
    set $clientip $remote_addr;
    proxy_pass_request_headers on;
    auth_request /check_token;
    proxy_intercept_errors on;
    error_page 401 = @error_401;
    auth_request_set $new_api_url $upstream_http_new_api_url;
    proxy_pass $new_api_url;
  }
}